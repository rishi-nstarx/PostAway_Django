# Generated by Django 5.1 on 2024-08-16 10:16

import ckeditor.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0004_users_profile_picture_alter_users_table'),
    ]

    operations = [
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_updated', models.DateTimeField(auto_now=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='likedpost', to='users.users')),
                ('saves', models.ManyToManyField(blank=True, related_name='savedpost', to='users.users')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='users.users')),
            ],
            options={
                'db_table': 'posts',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(max_length=300)),
                ('time_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_updated', models.DateTimeField(auto_now=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='comment_likes', to='users.users')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.users')),
                ('reply', models.ManyToManyField(blank=True, related_name='replay_on_comments', to='users.users')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.posts')),
            ],
            options={
                'db_table': 'comments',
            },
        ),
    ]
